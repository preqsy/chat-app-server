input AuthUserCreate {
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input AuthUserLogin {
  email: String!
  password: String!
}

type AuthUser {
  id: Int!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  createdAt: String!
  updatedAt: String!
}

type AuthUserResponse {
  authUser: AuthUser!
  token: String!
}

type LoginResponse {
  token: String!
}

type UserEmail {
  email: String!
}

type Query {
  placeholder: String
  getCurrentUser(token: String!): AuthUser
}

type Mutation {
  createAuthUser(input: AuthUserCreate!): AuthUserResponse!
  loginAuthUser(input: AuthUserLogin!): LoginResponse!
}
